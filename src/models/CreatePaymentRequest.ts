/* tslint:disable */
/* eslint-disable */
/**
 * Paidy Payment API
 * API for creating payments through Paidy.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CreatePaymentRequestOrder } from './CreatePaymentRequestOrder';
import {
    CreatePaymentRequestOrderFromJSON,
    CreatePaymentRequestOrderFromJSONTyped,
    CreatePaymentRequestOrderToJSON,
    CreatePaymentRequestOrderToJSONTyped,
} from './CreatePaymentRequestOrder';
import type { CreatePaymentRequestBuyerData } from './CreatePaymentRequestBuyerData';
import {
    CreatePaymentRequestBuyerDataFromJSON,
    CreatePaymentRequestBuyerDataFromJSONTyped,
    CreatePaymentRequestBuyerDataToJSON,
    CreatePaymentRequestBuyerDataToJSONTyped,
} from './CreatePaymentRequestBuyerData';
import type { CreatePaymentRequestShippingAddress } from './CreatePaymentRequestShippingAddress';
import {
    CreatePaymentRequestShippingAddressFromJSON,
    CreatePaymentRequestShippingAddressFromJSONTyped,
    CreatePaymentRequestShippingAddressToJSON,
    CreatePaymentRequestShippingAddressToJSONTyped,
} from './CreatePaymentRequestShippingAddress';

/**
 * 
 * @export
 * @interface CreatePaymentRequest
 */
export interface CreatePaymentRequest {
    /**
     * 
     * @type {string}
     * @memberof CreatePaymentRequest
     */
    tokenId: string;
    /**
     * 
     * @type {number}
     * @memberof CreatePaymentRequest
     */
    amount: number;
    /**
     * 
     * @type {string}
     * @memberof CreatePaymentRequest
     */
    currency: string;
    /**
     * 
     * @type {string}
     * @memberof CreatePaymentRequest
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof CreatePaymentRequest
     */
    storeName?: string;
    /**
     * 
     * @type {CreatePaymentRequestBuyerData}
     * @memberof CreatePaymentRequest
     */
    buyerData: CreatePaymentRequestBuyerData;
    /**
     * 
     * @type {CreatePaymentRequestOrder}
     * @memberof CreatePaymentRequest
     */
    order: CreatePaymentRequestOrder;
    /**
     * 
     * @type {object}
     * @memberof CreatePaymentRequest
     */
    metadata?: object;
    /**
     * 
     * @type {CreatePaymentRequestShippingAddress}
     * @memberof CreatePaymentRequest
     */
    shippingAddress?: CreatePaymentRequestShippingAddress;
}

/**
 * Check if a given object implements the CreatePaymentRequest interface.
 */
export function instanceOfCreatePaymentRequest(value: object): value is CreatePaymentRequest {
    if (!('tokenId' in value) || value['tokenId'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('currency' in value) || value['currency'] === undefined) return false;
    if (!('buyerData' in value) || value['buyerData'] === undefined) return false;
    if (!('order' in value) || value['order'] === undefined) return false;
    return true;
}

export function CreatePaymentRequestFromJSON(json: any): CreatePaymentRequest {
    return CreatePaymentRequestFromJSONTyped(json, false);
}

export function CreatePaymentRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreatePaymentRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'tokenId': json['token_id'],
        'amount': json['amount'],
        'currency': json['currency'],
        'description': json['description'] == null ? undefined : json['description'],
        'storeName': json['store_name'] == null ? undefined : json['store_name'],
        'buyerData': CreatePaymentRequestBuyerDataFromJSON(json['buyer_data']),
        'order': CreatePaymentRequestOrderFromJSON(json['order']),
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'shippingAddress': json['shipping_address'] == null ? undefined : CreatePaymentRequestShippingAddressFromJSON(json['shipping_address']),
    };
}

  export function CreatePaymentRequestToJSON(json: any): CreatePaymentRequest {
      return CreatePaymentRequestToJSONTyped(json, false);
  }

  export function CreatePaymentRequestToJSONTyped(value?: CreatePaymentRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'token_id': value['tokenId'],
        'amount': value['amount'],
        'currency': value['currency'],
        'description': value['description'],
        'store_name': value['storeName'],
        'buyer_data': CreatePaymentRequestBuyerDataToJSON(value['buyerData']),
        'order': CreatePaymentRequestOrderToJSON(value['order']),
        'metadata': value['metadata'],
        'shipping_address': CreatePaymentRequestShippingAddressToJSON(value['shippingAddress']),
    };
}

