/* tslint:disable */
/* eslint-disable */
/**
 * Paidy Payment API
 * API for creating payments through Paidy.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RefundPaymentRequest
 */
export interface RefundPaymentRequest {
    /**
     * 
     * @type {string}
     * @memberof RefundPaymentRequest
     */
    captureId: string;
    /**
     * Amount to refund
     * @type {number}
     * @memberof RefundPaymentRequest
     */
    amount?: number;
    /**
     * Reason for the refund
     * @type {string}
     * @memberof RefundPaymentRequest
     */
    reason?: string;
    /**
     * 
     * @type {object}
     * @memberof RefundPaymentRequest
     */
    metadata?: object;
}

/**
 * Check if a given object implements the RefundPaymentRequest interface.
 */
export function instanceOfRefundPaymentRequest(value: object): value is RefundPaymentRequest {
    if (!('captureId' in value) || value['captureId'] === undefined) return false;
    return true;
}

export function RefundPaymentRequestFromJSON(json: any): RefundPaymentRequest {
    return RefundPaymentRequestFromJSONTyped(json, false);
}

export function RefundPaymentRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RefundPaymentRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'captureId': json['capture_id'],
        'amount': json['amount'] == null ? undefined : json['amount'],
        'reason': json['reason'] == null ? undefined : json['reason'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
    };
}

  export function RefundPaymentRequestToJSON(json: any): RefundPaymentRequest {
      return RefundPaymentRequestToJSONTyped(json, false);
  }

  export function RefundPaymentRequestToJSONTyped(value?: RefundPaymentRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'capture_id': value['captureId'],
        'amount': value['amount'],
        'reason': value['reason'],
        'metadata': value['metadata'],
    };
}

